# Example Nginx configuration for Authelia integration
# This file shows how to configure Nginx as a reverse proxy with Authelia for authentication

# Define Authelia server
upstream authelia {
    server authelia:9091;
}

# Define your application servers
upstream api_server {
    server api:3000;
}

upstream app_server {
    server app:80;
}

# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name example.com *.example.com;
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main server configuration
server {
    listen 443 ssl http2;
    server_name example.com;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    
    # Authelia authentication request
    location /authelia {
        internal;
        set $upstream_authelia authelia;
        proxy_pass http://$upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        
        # Authelia headers
        proxy_set_header X-Original-URL $scheme://$host$request_uri;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        
        # Custom headers for authorization
        proxy_set_header Remote-User $remote_user;
        proxy_set_header Remote-Groups $remote_groups;
        proxy_set_header Remote-Name $remote_name;
        proxy_set_header Remote-Email $remote_email;
    }
    
    # Authelia portal
    location ^~ /auth/ {
        set $upstream_authelia authelia;
        proxy_pass http://$upstream_authelia/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        
        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Frontend application (protected by Authelia)
    location / {
        # Authentication request
        auth_request /authelia;
        auth_request_set $remote_user $upstream_http_remote_user;
        auth_request_set $remote_groups $upstream_http_remote_groups;
        auth_request_set $remote_name $upstream_http_remote_name;
        auth_request_set $remote_email $upstream_http_remote_email;
        
        # Redirect to Authelia if authentication fails
        error_page 401 =302 https://auth.example.com/?rd=$scheme://$host$request_uri;
        
        # Pass authentication headers to the backend
        proxy_set_header Remote-User $remote_user;
        proxy_set_header Remote-Groups $remote_groups;
        proxy_set_header Remote-Name $remote_name;
        proxy_set_header Remote-Email $remote_email;
        
        # Proxy to the frontend application
        set $upstream_app app_server;
        proxy_pass http://$upstream_app;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# API server configuration
server {
    listen 443 ssl http2;
    server_name api.example.com;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/api.example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/api.example.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    
    # Authelia authentication request
    location /authelia {
        internal;
        set $upstream_authelia authelia;
        proxy_pass http://$upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        
        # Authelia headers
        proxy_set_header X-Original-URL $scheme://$host$request_uri;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        
        # Custom headers for authorization
        proxy_set_header Remote-User $remote_user;
        proxy_set_header Remote-Groups $remote_groups;
        proxy_set_header Remote-Name $remote_name;
        proxy_set_header Remote-Email $remote_email;
    }
    
    # API endpoints (protected by Authelia)
    location / {
        # Authentication request
        auth_request /authelia;
        auth_request_set $remote_user $upstream_http_remote_user;
        auth_request_set $remote_groups $upstream_http_remote_groups;
        auth_request_set $remote_name $upstream_http_remote_name;
        auth_request_set $remote_email $upstream_http_remote_email;
        
        # Redirect to Authelia if authentication fails
        error_page 401 =302 https://auth.example.com/?rd=$scheme://$host$request_uri;
        
        # Pass authentication headers to the backend
        proxy_set_header Remote-User $remote_user;
        proxy_set_header Remote-Groups $remote_groups;
        proxy_set_header Remote-Name $remote_name;
        proxy_set_header Remote-Email $remote_email;
        
        # Proxy to the API server
        set $upstream_api api_server;
        proxy_pass http://$upstream_api;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Authelia portal
server {
    listen 443 ssl http2;
    server_name auth.example.com;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/auth.example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/auth.example.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    
    # Proxy to Authelia
    location / {
        set $upstream_authelia authelia;
        proxy_pass http://$upstream_authelia;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        
        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
