version: '3.8'

services:
  # Authelia service
  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    volumes:
      - ./config:/config
    environment:
      - TZ=Europe/Dublin
    networks:
      - proxy_network
    restart: unless-stopped
    depends_on:
      - redis

  # Redis for Authelia session storage
  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - ./redis_data:/data
    networks:
      - proxy_network
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning

  # API service
  api:
    image: node:16-alpine
    container_name: api
    working_dir: /app
    volumes:
      - ../api:/app
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=your_jwt_secret
      - AUTHELIA_JWT_SECRET=your_authelia_jwt_secret
    command: npm start
    networks:
      - proxy_network
    restart: unless-stopped
    depends_on:
      - postgres

  # Frontend application
  app:
    image: nginx:alpine
    container_name: app
    volumes:
      - ../app/dist:/usr/share/nginx/html
      - ./app-nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - proxy_network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=clink
    networks:
      - proxy_network
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    networks:
      - proxy_network
    restart: unless-stopped
    depends_on:
      - authelia
      - api
      - app

networks:
  proxy_network:
    driver: bridge

volumes:
  postgres_data:
